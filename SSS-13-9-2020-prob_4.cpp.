#include <iostream>
using namespace std;

struct stack
{
    int size;
    int top;
    int elements[50];

};
void push (struct stack *s, int x)
    {
        if(s->top == s->size -1)
        cout<<"stack is full";
        else
        {
            s->elements[++s->top] = x;
        }
        
    }

int pop(struct stack *s)
{
    if(s->top==-1)
    {
        cout<<"stack is empty";
        return 0;
    }
    else
    {
        return s->elements[s->top--];
    }
    
}
int peep(struct stack *s)
{
    if(s->top==-1)
    {
        cout<<"stack is empty";
        return 0;
    }
    else
    {
        return s->elements[s->top];
    }
    
}
void printF(struct stack *s)
{
    if(s->top==-1)
    {

    }
    else
    {
       int x = pop(s);
       printF(s);
       cout<<x<<" ";
    }
    
}

int main ()
{
    struct stack *s1;
    s1 = new(stack);
    s1->size = 50;
    s1->top = -1;
    int n,B;
    cin>>n;
    int A[n],max;
    for(int i=0;i<n;i++)
    {
        cin>>A[i];
    }
    cin>>B;
    int subArray[B];
    for(int i=0;i<=n-B;i++)
    {
        for(int j=i;j<B+i;j++)
        {
            subArray[j-i] = A[j]; 
        }
        max = -9999;
        for(int i =0;i<B;i++)
        {
            if(subArray[i]>max)
            {
                max = subArray[i];
            }
        }
        cout<<max<<endl;
        push(s1, max);
    }
    printF(s1);
}

